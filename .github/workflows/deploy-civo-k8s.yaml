name: Deploy Hugo to Civo Kubernetes

on:
  workflow_run:
    workflows: ["Deploy Hugo to GitHub Pages"]  # Replace with your actual GitHub Pages workflow name if different
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the main branch to access Kubernetes manifests and configuration files
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      # 2. Check out the gh-pages branch to retrieve the generated static site files
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: gh-pages
          path: gh-pages

      # 3. Create a Dockerfile that serves the static files from the gh-pages directory using Nginx
      - name: Create Dockerfile for static site
        run: |
          cat <<'EOF' > Dockerfile
          FROM nginx:alpine
          COPY gh-pages/ /usr/share/nginx/html
          EOF

      # 4. Set up QEMU for multi-architecture builds (if needed)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 5. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 6. Log in to GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 7. Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/hugo-site:latest

      # 8. Retrieve the kubeconfig from Bitwarden (as a base64-encoded string)
      - name: Get Secrets from Bitwarden
        id: get_secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          base_url: https://vault.bitwarden.eu
          secrets: |
            698ad139-5f16-4533-9f3a-b27b00e511f5 > KUBE_CONFIG_BASE64

      # 9. Decode the base64 kubeconfig and set it as an output
      - name: Decode kubeconfig from base64
        id: decode_kubeconfig
        run: |
          mkdir -p $HOME/.kube  # Ensure the directory exists
          echo "${{ steps.get_secrets.outputs.KUBE_CONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config  # Restrict permissions for security
        env:
          KUBE_CONFIG_BASE64: ${{ steps.get_secrets.outputs.KUBE_CONFIG_BASE64 }}

      # 10. Deploy to Civo Kubernetes using the kubectl action with the decoded kubeconfig
      - name: Deploy to Civo Kubernetes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: $HOME/.kube/config
        with:
          args: apply -f k8s/deployment.yaml